name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # 检查CI是否通过
  check-ci:
    name: 检查CI状态
    runs-on: ubuntu-latest
    outputs:
      ci-passed: ${{ steps.check.outputs.result }}

    steps:
      - name: 🛎️ 检出代码
        uses: actions/checkout@v4

      - name: 🔍 检查CI状态
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });

            const ciRuns = checks.check_runs.filter(run =>
              run.name.includes('代码检查和构建') ||
              run.name.includes('CI')
            );

            if (ciRuns.length === 0) {
              console.log('⚠️  未找到CI检查，继续发布');
              return 'true';
            }

            const allPassed = ciRuns.every(run => run.conclusion === 'success');
            console.log(`CI检查结果: ${allPassed ? '✅ 通过' : '❌ 失败'}`);
            return allPassed.toString();

  release:
    name: 发布到npm
    runs-on: ubuntu-latest
    needs: check-ci
    if: needs.check-ci.outputs.ci-passed == 'true'
    permissions:
      contents: write
      packages: write

    steps:
      - name: 🛎️ 检出代码
        uses: actions/checkout@v4

      - name: 📦 安装pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: 🔧 设置Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: 📚 安装依赖
        run: pnpm install --no-frozen-lockfile

      - name: 📦 构建项目
        run: pnpm run build

      - name: 📋 获取版本信息
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: 🚀 发布到npm
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📝 创建GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## 🎉 版本 ${{ steps.get_version.outputs.VERSION }} 发布

            ### 📦 安装
            ```bash
            npm install -g @qile-c/cursor-rules-cli
            ```

            ### 🚀 使用
            ```bash
            cursor-rules init
            ```

            ### 🔗 链接
            - [npm包地址](https://www.npmjs.com/package/@qile-c/cursor-rules-cli)
            - [文档地址](https://github.com/${{ github.repository }})
          generate_release_notes: true

      - name: 📢 发布成功
        run: echo "🎉 发布成功！npm install -g @qile-c/cursor-rules-cli"
